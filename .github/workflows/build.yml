name: Oak CI Android Release

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/build.yml
      - oak_client/store/**
      - oak_client/build.gradle.kts
      - oak_client/gradle.properties
      - oak_client/gradlew
      - oak_client/gradlew.bat
      - oak_client/settings.gradle.kts
      - oak_console/store/**
      - oak_console/build.gradle.kts
      - oak_console/gradle.properties
      - oak_console/gradlew
      - oak_console/gradlew.bat
      - oak_console/settings.gradle.kts

jobs:
  build_release_apk_client:
    name: Build Oak Client Release APK
    runs-on: ubuntu-latest
    env:
      GOOGLE_SERVICES_FILE: ${{ secrets.GOOGLE_SERVICES_FILE }}
      KEYS_FILE: ${{ secrets.KEYS_FILE }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x oak_client/gradlew

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: Create google-services.json
        run: echo "$GOOGLE_SERVICES_FILE" > oak_client/store/google-services.json

      - name: Check google-services.json
        run: cat oak_client/store/google-services.json

      - name: Create keys.xml
        run: echo "$KEYS_FILE" > oak_client/store/src/main/res/values/keys.xml

      - name: Check keys.xml
        run: cat oak_client/store/src/main/res/values/keys.xml

      - name: Build with Gradle
        id: gradle_build_release
        run: ./oak_client/gradlew assembleRelease -p oak_client

      - name: Upload release apk
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: store-release
          path: oak_client/store/build/outputs/apk/release/

  send_release_apk_client:
    name: Send Oak Client Release APK
    runs-on: ubuntu-latest
    needs: build_release_apk_client
    steps:
      - name: Download release apk
        uses: actions/download-artifact@v4
        with:
          name: store-release

      - name: Send Build Failure Notification to Telegram
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: -1002213084840
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          disable_web_page_preview: false
          message: |
            *Build Failed!*
            Repository: *${{ github.repository }}*
            Branch: *${{ github.ref_name }}*
            Type: release
            Commit message: `${{ github.event.head_commit.message }}`
            [Check the logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Sign APK
        id: sign_apk_store
        uses: noriban/sign-android-release@v5
        with:
          releaseDirectory: .
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"
            
      - name: Send APK to OakStore CI Telegram
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: -1002213084840
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          document: ${{steps.sign_apk_store.outputs.signedReleaseFile}}
          disable_web_page_preview: false
          message: |
            *Build Success!*
            Repository: *${{ github.repository }}*
            Branch: *${{ github.ref_name }}*
            Type: release
            Commit message: `${{ github.event.head_commit.message }}`
            [Check the logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

  build_release_apk_console:
    name: Build Oak Console Release APK
    runs-on: ubuntu-latest
    env:
      GOOGLE_SERVICES_FILE: ${{ secrets.GOOGLE_SERVICES_FILE }}
      KEYS_FILE: ${{ secrets.KEYS_FILE }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x oak_console/gradlew

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: Create google-services.json
        run: echo "$GOOGLE_SERVICES_FILE" > oak_console/console/google-services.json

      - name: Check google-services.json
        run: cat oak_console/console/google-services.json

      - name: Create keys.xml
        run: echo "$KEYS_FILE" > oak_console/console/src/main/res/values/keys.xml

      - name: Check keys.xml
        run: cat oak_console/console/src/main/res/values/keys.xml

      - name: Build with Gradle
        id: gradle_build_release
        run: ./oak_console/gradlew assembleRelease -p oak_console

      - name: Upload release apk
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: console-release
          path: oak_console/console/build/outputs/apk/release/

  send_release_apk_console:
    name: Send Oak Console Release APK
    runs-on: ubuntu-latest
    needs: build_release_apk_console
    steps:
      - name: Download release apk
        uses: actions/download-artifact@v4
        with:
          name: console-release

      - name: Send Build Failure Notification to Telegram
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: -1002230892820
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          disable_web_page_preview: false
          message: |
            *Build Failed!*
            Repository: *${{ github.repository }}*
            Branch: *${{ github.ref_name }}*
            Type: release
            Commit message: `${{ github.event.head_commit.message }}`
            [Check the logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Sign APK
        id: sign_apk_console
        uses: noriban/sign-android-release@v5
        with:
          releaseDirectory: .
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"         

      - name: Send APK to OakStore CI Telegram
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: -1002230892820
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          document: ${{steps.sign_apk_console.outputs.signedReleaseFile}}
          disable_web_page_preview: false
          message: |
            *Build Success!*
            Repository: *${{ github.repository }}*
            Branch: *${{ github.ref_name }}*
            Type: release
            Commit message: `${{ github.event.head_commit.message }}`
            [Check the logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
